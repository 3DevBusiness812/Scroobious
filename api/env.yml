local: &local # DEBUG: '*,-ioredis*'
  WARTHOG_ADMIN_PASSWORD: fake_password
  WARTHOG_AUTO_OPEN_PLAYGROUND: false
  WARTHOG_AUTO_GENERATE_FILES: false
  WARTHOG_FILTER_BY_DEFAULT: false
  WARTHOG_JWT_SECRET: fake_jwt_secret
  WARTHOG_JWT_EXPIRATION: 30d
  # GITHUB_TOKEN: ${env:GITHUB_API_TOKEN}
  # REDIS_HOST: redis (when using docker for all services)
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  REDIS_PASSWORD: fake_password
  REDIS_URL: redis://:fake_password@localhost:6379
  WARTHOG_ORMCONFIG_PATH: src/db/ormconfig.ts
  NEXT_PUBLIC_APP_BASE_URL: http://localhost:3000
  SCROOBIOUS_ADMIN_DB_PASSWORD: asdfasdf
  SCROOBIOUS_ADMIN_EMAIL: tech-admin@scroobious.com
  #S3 Bucket credentials
  S3_REGION: us-west-2
  S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}
  S3_ACCESS_KEY_ID: ${env:S3_ACCESS_KEY_ID}
  S3_SECRET_ACCESS_KEY: ${env:S3_SECRET_ACCESS_KEY}
  S3_BUCKET_SIGNED_URL_EXPIRES: 900

  # Stripe Key
  STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}

local_app: &local_app
  WARTHOG_API_PORT: 5001
  WARTHOG_API_BASE_URL: http://localhost:5001

dev_file_paths: &dev_file_paths
  WARTHOG_SERVICES_PATH: src/**/*.+(service|list).ts
  WARTHOG_MODELS_PATH: src/**/*.+(model|list).ts
  WARTHOG_RESOLVERS_PATH: src/**/*.+(resolver|list).ts
  WARTHOG_JOBS_PATH: src/**/*.job.ts

build_file_paths: &build_file_paths
  WARTHOG_DB_ENTITIES: dist/src/**/*.model.js
  WARTHOG_DB_SUBSCRIBERS: dist/src/**/*.model.js
  WARTHOG_RESOLVERS_PATH: dist/src/**/*.resolver.js
  WARTHOG_DB_MIGRATIONS: dist/db/migrations/**/*.js
  WARTHOG_SERVICES_PATH: dist/src/**/*.service.js
  WARTHOG_JOBS_PATH: dist/src/**/*.job.js
  WARTHOG_DB_SEEDS: dist/db/seeds/**/*.js
  WARTHOG_DB_SEEDS_DIR: dist/db/seeds
  WARTHOG_ORMCONFIG_PATH: dist/src/db/ormconfig.js

local_db: &local_db
  WARTHOG_DB_URL: postgres://postgres:postgres@localhost:5432/scroobious
  WARTHOG_DB_DATABASE: scroobious
  WARTHOG_DB_PASSWORD: postgres
  WARTHOG_DB_USERNAME: postgres
  WARTHOG_DB_PORT: 5432
  WARTHOG_DB_LOGGING: all
  WARTHOG_DB_SYNCHRONIZE: false
  WARTHOG_DB_SEEDS: 'db/seeds/**/*.ts'
  WARTHOG_DB_SEEDS_DIR: 'db/seeds'

prod_db: &prod_db
  PGSSLMODE: require
  WARTHOG_DB_DATABASE: ${env:WARTHOG_DB_DATABASE}
  WARTHOG_DB_HOST: ${env:WARTHOG_DB_HOST}
  WARTHOG_DB_LOGGING: none
  WARTHOG_DB_PASSWORD: ${env:WARTHOG_DB_PASSWORD}
  WARTHOG_DB_PORT: ${env:WARTHOG_DB_PORT}
  WARTHOG_DB_SYNCHRONIZE: false
  WARTHOG_DB_USERNAME: ${env:WARTHOG_DB_USERNAME}
  WARTHOG_DB_SEEDS: 'dist/db/seeds/**/*.js'
  WARTHOG_DB_SEEDS_DIR: 'dist/db/seeds'

test:
  NODE_ENV: test
  TZ: utc # Make sure dates are imported in UTC so that we don't have off-by-one issues
  WARTHOG_DB_URL: postgres://postgres:postgres@localhost:5432/scroobious-test
  WARTHOG_API_PORT: 5002
  WARTHOG_API_BASE_URL: http://localhost:5002
  # PGUSER: postgres
  WARTHOG_DB_PASSWORD: postgres
  S3_BUCKET_NAME: scroobious-app-fake-test
  S3_ACCESS_KEY_ID: fake-access-key
  S3_SECRET_ACCESS_KEY: fake-secret-access-key
  STRIPE_SECRET_KEY: fake-stripe-secret-key
  WISTIA_ACCESS_TOKEN: fake-wistia-access-token
  WISTIA_FOUNDER_VIDEO_PROJECT_ID: fake-wistia-video-project-id

  <<: *local
  <<: *local_app
  <<: *local_db
  <<: *dev_file_paths

docker:
  NODE_ENV: development
  WARTHOG_DB_URL: postgres://postgres:postgres@postgres:5432/scroobious
  REDIS_URL: redis://:fake_password@redis:6379
  WARTHOG_API_BASE_URL: http://api:5001 # This is localhost because it's really just what is written to the console to access outside of docker
  <<: *local
  <<: *local_app
  <<: *local_db
  <<: *dev_file_paths

development:
  NODE_ENV: development
  <<: *local
  <<: *local_app
  <<: *local_db
  <<: *dev_file_paths

development:build:
  NODE_ENV: development
  <<: *local
  <<: *local_app
  <<: *build_file_paths
  <<: *local_db

development:prod-like:
  NODE_ENV: production
  <<: *local
  <<: *local_app
  <<: *build_file_paths
  <<: *local_db

production:
  NODE_ENV: production
  WARTHOG_API_PORT: ${env:PORT}
  WARTHOG_API_BASE_URL: http://localhost:${env:PORT}
  WARTHOG_INTROSPECTION: true
  WARTHOG_PLAYGROUND: true
  WARTHOG_JWT_SECRET: ${env:WARTHOG_JWT_SECRET}
  WARTHOG_JWT_EXPIRATION: ${env:WARTHOG_JWT_EXPIRATION}
  <<: *prod_db
  <<: *build_file_paths
